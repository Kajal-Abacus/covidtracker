{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Card/Card.jsx","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Cards/Card/Card.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","image/image.png"],"names":["module","exports","CardComponent","className","cardTitle","value","lastUpdate","cardSubtitle","Grid","item","xs","md","component","Card","cx","styles","card","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","Date","toDateString","Info","data","confirmed","recovered","deaths","container","spacing","justify","infected","url","fetchData","country","changeableUrl","axios","get","fetchDailyData","map","positive","death","date","dateChecked","fetchCountries","countries","name","i","Chart","useState","dailyData","setDailyData","useEffect","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","lineChart","toLocaleDateString","borderColor","fill","Countries","handleCountryChange","setCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","key","App","state","setState","this","image","src","alt","Cards","CountryPicker","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.57afaa2d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3wOYB\",\"card\":\"Cards_card__1rlgB\",\"infected\":\"Cards_infected__3J-ke\",\"recovered\":\"Cards_recovered__S6LPN\",\"deaths\":\"Cards_deaths__2pPor\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Card.module.css';\r\n\r\nconst CardComponent = ({ className, cardTitle, value, lastUpdate, cardSubtitle }) => (\r\n  <Grid item xs={12} md={3} component={Card} className={cx(styles.card, className)}>\r\n    <CardContent>\r\n      <Typography color=\"textSecondary\" gutterBottom>\r\n        {cardTitle}\r\n      </Typography>\r\n      <Typography variant=\"h5\" component=\"h2\">\r\n        <CountUp start={0} end={value} duration={2.75} separator=\",\" />\r\n      </Typography>\r\n      <Typography color=\"textSecondary\">\r\n        {new Date(lastUpdate).toDateString()}\r\n      </Typography>\r\n      <Typography variant=\"body2\" component=\"p\">\r\n        {cardSubtitle}\r\n      </Typography>\r\n    </CardContent>\r\n  </Grid>\r\n);\r\n\r\nexport default CardComponent;","import React from 'react';\r\nimport { Typography, Grid } from '@material-ui/core';\r\nimport CardComponent from './Card/Card';\r\nimport styles from './Cards.module.css';\r\n\r\nconst Info = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  if (!confirmed) {\r\n    return 'Loading...';\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n        <Typography gutterBottom variant=\"h4\" component=\"h2\">Global</Typography>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <CardComponent\r\n          className={styles.infected}\r\n          cardTitle=\"Infected\"\r\n          value={confirmed.value}\r\n          lastUpdate={lastUpdate}\r\n          cardSubtitle=\"Number of active cases from COVID-19.\"\r\n        />\r\n        <CardComponent\r\n          className={styles.recovered}\r\n          cardTitle=\"Recovered\"\r\n          value={recovered.value}\r\n          lastUpdate={lastUpdate}\r\n          cardSubtitle=\"Number of recoveries from COVID-19.\"\r\n        />\r\n        <CardComponent\r\n          className={styles.deaths}\r\n          cardTitle=\"Deaths\"\r\n          value={deaths.value}\r\n          lastUpdate={lastUpdate}\r\n          cardSubtitle=\"Number of deaths caused by COVID-19.\"\r\n        />\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Info;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n\r\n  if (country) {\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n\r\n  try {\r\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\n\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\n// export const fetchDailyData = async () => {\r\n//   try {\r\n//     const { data } = await axios.get(`${url}/daily`);\r\n\r\n//     return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\r\n//   } catch (error) {\r\n//     return error;\r\n//   }\r\n// };\r\n\r\n// Instead of Global, it fetches the daily data for the US\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n      const { data } = await axios.get('https://api.covidtracking.com/v1/us/daily.json');\r\n  \r\n      return data.map(({ positive, recovered, death, dateChecked: date }) => ({ confirmed: positive, recovered, deaths: death, date }));\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  };\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const { data: { countries } } = await axios.get(`${url}/countries`);\r\n\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport { fetchDailyData } from '../../api';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [dailyData, setDailyData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchMyAPI = async () => {\r\n      const initialDailyData = await fetchDailyData();\r\n\r\n      setDailyData(initialDailyData);\r\n    };\r\n\r\n    fetchMyAPI();\r\n  }, []);\r\n\r\n  const barChart = (\r\n    confirmed ? (\r\n      <Bar\r\n        data={{\r\n          labels: ['Infected', 'Recovered', 'Deaths'],\r\n          datasets: [\r\n            {\r\n              label: 'People',\r\n              backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n              data: [confirmed.value, recovered.value, deaths.value],\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: { display: false },\r\n          title: { display: true, text: `Current state in ${country}` },\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  const lineChart = (\r\n    dailyData[0] ? (\r\n      <Line\r\n        data={{\r\n          labels: dailyData.map(({ date }) => new Date(date).toLocaleDateString()),\r\n          datasets: [{\r\n            data: dailyData.map((data) => data.confirmed),\r\n            label: 'Infected',\r\n            borderColor: '#3333ff',\r\n            fill: true,\r\n          }, {\r\n            data: dailyData.map((data) => data.deaths),\r\n            label: 'Deaths',\r\n            borderColor: 'red',\r\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n            fill: true,\r\n          },  {\r\n            data: dailyData.map((data) => data.recovered),\r\n            label: 'Recovered',\r\n            borderColor: 'green',\r\n            backgroundColor: 'rgba(0, 255, 0, 0.5)',\r\n            fill: true,\r\n          },\r\n          ],\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {country ? barChart : lineChart}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nconst Countries = ({ handleCountryChange }) => {\r\n  const [countries, setCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setCountries(await fetchCountries());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n        <option value=\"\">United States</option>\r\n        {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default Countries;","import React from 'react';\r\n\r\nimport { Cards, CountryPicker, Chart } from './components';\r\nimport { fetchData } from './api/';\r\nimport styles from './App.module.css';\r\n\r\nimport image from './image/image.png';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    data: {},\r\n    country: '',\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const data = await fetchData();\r\n\r\n    this.setState({ data });\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    const data = await fetchData(country);\r\n\r\n    this.setState({ data, country: country });\r\n  }\r\n\r\n  render() {\r\n    const { data, country } = this.state;\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        <img className={styles.image} src={image} alt=\"COVID-19\" />\r\n        <Cards data={data} />\r\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n        <Chart data={data} country={country} /> \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__cB41I\",\"image\":\"App_image__2ml0q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__ODH0O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__31XS9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__K7Xfl\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}